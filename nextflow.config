#! /usr/bin/env nextflow

nextflow.enable.dsl=2

// Parameters for the nextflow pipeline
params {
  // Option 1: One process (default)
  input_dir = false // "/Users/jenchang/github/nextstrain/zika-tutorial"
  input_url = false // "https://github.com/nextstrain/zika-tutorial/archive/refs/heads/master.zip"

  // Option 2: Separated processes
  genbank_ids = "data/gb.ids"
  sequences = "data/sequences.fasta"
  metadata = "data/metadata.tsv"
  exclude = "data/dropped_strains.txt"
  reference = "data/zika_outgroup.gb"   // maybe call this outgroup?
  colors = "data/colors.tsv"            // by clade I suppose...
  lat_longs = "data/lat_longs.tsv"
  auspice_config = "data/auspice_config.json"
  gff = "results/sars-cov-2/genemap.gff"
  ref_fa = "results/sars-cov-2/reference.fasta"

  outdir = "results"

  // link any executables
  nextstrain_docker_img = 'nextstrain/base:latest'
  nextstrain_app = "nextstrain"
  augur_app = "augur"
  nextclade_app = "nextclade"
  nextalign_app = "nextalign"
  conda_env = "environment.yml"  // Alternatively, you can pass in path to existing conda environment

  threads = 4
  queueSize = 10
  clusterOptions = false
  yaml = false
}

// Environment variables, passed everywhere
env {
    augur_app = params.augur_app ? "${params.augur_app}" : "augur"
    nextclade_app = params.nextclade_app
    nextalign_app = params.nextalign_app
    nextstrain_app = params.nextstrain_app
    nextstrain_docker_img = params.nextstrain_docker_img
}

// Pick a profile  -profile "aws"
profiles {
  local { process.cpus = "${params.threads}" }
  conda {
    process.conda = "${params.conda_env}"
    conda.useMamba = true
  }
  slurm { includeConfig 'configs/slurm.config' }
//  pbs   { includeConfig 'configs/pbs.config' }
  aws   { includeConfig 'configs/aws.config' }

  docker {
    docker.enabled = true
    docker.runOptions = '-u \$(id -u):\$(id -g)'
    includeConfig 'configs/docker.config'

    // Work around ps not being in Docker Image
    timeline.enabled = false
    report.enabled = false
  }

  singularity { // Does not work on mac until they make a singularity update
    singularity.enabled = true
    singularity.autoMounts = true
    includeConfig 'configs/docker.config'
  }

//  custom { includeConfig 'configs/custom.config' }
// test {} // pull a test dataset, and run nextflow
}

process {
  publishDir = "$params.outdir"
}

timeline {
  enabled = true
  file = "$params.outdir/timeline.html"
}

report {
  enabled = true
  file = "$params.outdir/report.html"
}

manifest {
  description = "nextflow modularized options for nextstrain"
  author = 'jenchang'
}